@using Spine.Web.Areas.Cmn.Models;
@using Spine.Web.Clases;
@using Spine.Constants.Cfg;
@using Spine.Constants.Cmn;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Breadcrumb> breadcrumbs = new List<Breadcrumb>();
    breadcrumbs.Add(new Breadcrumb { Name = "Sucursales" });
    SucursalAccess vobjSucursalAccess = (SucursalAccess)ViewBag.objSucursalAccess;
}

@section PluginStyle {
    <link rel="stylesheet" href="/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="/Content/plugins/select2/select2.min.css" />
    <link rel="stylesheet" href="/Content/plugins/select2/select2-bootstrap.css" />
}

@section Breadcrumb {
    @Html.Partial("_Breadcrumb", breadcrumbs)
}

<div class="card card-info card-outline">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title m-0">Sucursales</h5>
        <div class="card-tools">
            @if ((bool)vobjSucursalAccess.lCrear)
            {
                <a id="btnMostrarCrear" class="btn btn-info btn-sm my-0 mr-0" title="Crear Sucursal">
                    <i class="fas fa-plus mr-2"></i> Crear
                </a>
            }
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-lg-12">
                <table id="tblSucursales" class="table table-striped table-bordered table-hover table-sm rounded"></table>
            </div>
        </div>
    </div>
</div>

@section Modal {

    @{Html.RenderAction("Ver", "Cambio", new { area = "Aud", psEtiqueta = "Sucursal", piEntId = @EntidadConstant.Sucursal });}

    <div id="modSucursal"
         class="modal fade"
         role="dialog"
         tabindex="-1"
         aria-hidden="true"
         data-keyboard="false"
         data-backdrop="static"
         data-focus-on="input:first">

        <div class="modal-dialog modal-md" role="document">
            <div class="modal-content">
                <form role="form" id="frmSucursal" autocomplete="off">
                    <div class="modal-header">
                        <h5 class="modal-title">Crear Sucursal</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label for="txtSucNombre">Nombre <span class="text-red ml-2">*</span></label>
                                <input type="text" id="txtSucNombre" class="form-control form-control-sm" name="sSucNombre" maxlength="50" required />
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label for="cboUbigeos">Ubigeo <span style="color:red"> *</span> </label>
                                <select id="cboUbigeos" class="form-control form-control-sm" name="iUbiId" required></select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label for="txtSucDireccion">Dirección <span class="text-red ml-2">*</span></label>
                                <input type="text" id="txtSucDireccion" class="form-control form-control-sm" name="sSucDireccion" maxlength="100" required />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btnGuardar" class="btn btn-info btn-sm my-0 mr-0">
                            <span class="fas fa-save mr-2"></span>Guardar
                        </button>
                        <button type="button" class="btn btn-secondary btn-sm my-0 mr-0" data-dismiss="modal">
                            <span class="fas fa-times mr-2"></span>Cancelar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section PluginScript {
    <script src="/Content/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="/Content/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/Scripts/plugins/select2/select2.full.min.js"></script>
}

@section Script {
    <script type="text/javascript">
        //Titulo
        document.title = "Sucursales : @CnsCadenas.WEB_TITULO";

        // Variables
        var tblSucursales = null;
        var lstSucursales = [];
        var objSucursal = {};
        var iFila = -1;

        //Funciones
        const iniciar = () => {
            tblSucursales = $('#tblSucursales').DataTable({
                ...cnsDataTableOptions,
                columns: [
                    {
                        title: "N°", data: null, visible: true, width: "20px", className: "text-center",
                        render: (data, type, row, meta) => (meta.row + 1)
                    },
                    { title: "Nombre", data: "sSucNombre", visible: true, width: "15%" },
                    { title: "Ubigeo", data: "sUbiRama", width: "25%", visible: true },
                    { title: "Dirección", data: "sSucDireccion", visible: true },
                    {
                        title: "Estado", data: "sSucEstado", visible: true, width: "80px", className: "text-center",
                        render: (data, type, row, meta) => fnCrearTag("span", { sClase: (row.iSucEstado == @EstadoConstant.Activado ? "badge badge-success" : "badge badge-danger py-1"), sTexto: data }).prop("outerHTML")
                    },
                    {
                        title: "Acciones", data: null, visible: true, width: "60px",
                        render: (data, type, row, meta) => {
                            if (type !== 'display') return data;

                            let vlstData = [{ sNombre: "data-row", sValor: meta.row }];
                            let vobjOpciones = fnCrearTag("div", { sClase: "card-action d-inline" });

                            if (row.iSucEstado == @EstadoConstant.Activado) {
                                if (@Convert.ToString(vobjSucursalAccess.lEditar).ToLower()) {
                                    vobjOpciones.append(fnCrearTag("button", { sClase: "btn btn-info btn-xs btn-action btnMostrarEditar", sTitulo: "Editar", sIcono: "fas fa-edit", lstData: vlstData }));
                                }
                                if (@Convert.ToString(vobjSucursalAccess.lDesactivar).ToLower()) {
                                    vobjOpciones.append(fnCrearTag("button", { sClase: "btn btn-info btn-xs btn-action btnDesactivar ml-2", sTitulo: "Desactivar", sIcono: "fas fa-times", lstData: vlstData }));
                                }
                            } else if (row.iSucEstado == @EstadoConstant.Desactivado) {
                                if (@Convert.ToString(vobjSucursalAccess.lActivar).ToLower()) {
                                    vobjOpciones.append(fnCrearTag("button", { sClase: "btn btn-info btn-xs btn-action btnActivar", sTitulo: "Activar", sIcono: "fas fa-check", lstData: vlstData }));
                                }
                            }
                            vobjOpciones.append(fnCrearTag("button", { sClase: "btn btn-info btn-xs btn-action btnMostrarCambios ml-2", sTitulo: "Ver Cambios", sIcono: "fas fa-clock", lstData: vlstData }));

                            return vobjOpciones.prop("outerHTML");
                        }
                    }
                ]
            });
            fnAlfanumerico("#txtSucNombre", "-");
            fnAlfanumerico("#txtSucBreve", "");
            fnAlfanumerico("#txtSucDireccion", "");

            fnSelect2({
                sIdCombo: "#cboUbigeos",
                sUrl: "cfg/ubigeo/consultar",
                sAtributoValor: "iUbiId",
                sAtributoMostrar: "sUbiRama",
                objParametros: { piUbiEstado: @EstadoConstant.Activado, piUbiTipo: @TipoUbigeoConstant.Distrito },
                sParametroBusqueda: "psUbiRama",
                sPlaceholder: "Seleccionar"
            });
        }
        const consultar = () => {
            fnProcesando();
            fnGet("cmn/sucursal/consultar", {})
                .then((pobjApiRpta) => {
                    if (fnVerificarApiRpta(pobjApiRpta)) {
                        lstSucursales = pobjApiRpta.objDatos;
                        tblSucursales.clear().draw();
                        tblSucursales.rows.add(lstSucursales).draw().columns.adjust().responsive.recalc();
                    }
                    fnProcesando(false);
                });
        }

        // Eventos
        $(document).ready(() => {
            iniciar();
            consultar();
        });
        $(document).on("click", "#btnMostrarCrear", function () {
            if (@Convert.ToString(vobjSucursalAccess.lCrear).ToLower()) {
                objSucursal = { iSucId: 0 };
                fnLimpiarDiv("#frmSucursal");
                $("#modSucursal .modal-title").text("Crear Sucursal");
                $("#modSucursal").modal({ backdrop: "static", keyboard: false });
                $("#modSucursal").modal("show");
            } else {
                fnAdvertencia("Ud. no tiene permiso para crear sucursal");
            }
        });
        $(document).on("click", ".btnMostrarEditar", function (event) {
            if (@Convert.ToString(vobjSucursalAccess.lEditar).ToLower()) {
                fnLimpiarDiv("#frmSucursal");
                iFila = event.currentTarget.getAttribute("data-row");
                objSucursal = tblSucursales.row(iFila).data();
                fnLlenarDiv("#frmSucursal", objSucursal);
                fnSelectValor("#cboUbigeos", objSucursal.iUbiId, objSucursal.sUbiRama)
                $("#modSucursal .modal-title").text("Editar Sucursal");
                $("#modSucursal").modal("show");
            } else {
                fnAdvertencia("Ud. no tiene permiso para editar sucursal");
            }
        });
        $(document).on("click", ".btnActivar", function (event) {
            if (@Convert.ToString(vobjSucursalAccess.lActivar).ToLower()) {
                let viFila = event.currentTarget.getAttribute("data-row");
                let viSucId = tblSucursales.row(viFila).data().iSucId;
                fnPregunta("¿Está seguro de activar sucursal?", function () {
                    fnProcesando();
                    fnPut(`cmn/sucursal/activar/${viSucId}`, {})
                        .then((pobjApiRpta) => {
                            if (fnVerificarApiRpta(pobjApiRpta)) {
                                fnMensaje("Se activó sucursal exitosamente");
                                lstSucursales[viFila] = pobjApiRpta.objDatos;
                                tblSucursales.clear().draw();
                                tblSucursales.rows.add(lstSucursales).draw().columns.adjust().responsive.recalc();
                            }
                            fnProcesando(false);
                        });
                });
            } else {
                fnAdvertencia("Ud. no tiene permiso para activar sucursal");
            }
        });
        $(document).on("click", ".btnDesactivar", function (event) {
            if (@Convert.ToString(vobjSucursalAccess.lDesactivar).ToLower()) {
                let viFila = event.currentTarget.getAttribute("data-row");
                let viSucId = tblSucursales.row(viFila).data().iSucId;
                fnPregunta("¿Está seguro de desactivar sucursal?", function () {
                    fnProcesando();
                    fnPut(`cmn/sucursal/desactivar/${viSucId}`, {})
                        .then((pobjApiRpta) => {
                            if (fnVerificarApiRpta(pobjApiRpta)) {
                                fnMensaje("Se desactivó sucursal exitosamente");
                                lstSucursales[viFila] = pobjApiRpta.objDatos;
                                tblSucursales.clear().draw();
                                tblSucursales.rows.add(lstSucursales).draw().columns.adjust().responsive.recalc();
                            }
                            fnProcesando(false);
                        });
                });
            } else {
                fnAdvertencia("Ud. no tiene permiso para desactivar sucursal");
            }
        });
        $(document).on("click", ".btnMostrarCambios", function (event) {
            fnProcesando();
            var vobjSucursal = tblSucursales.row(event.currentTarget.getAttribute("data-row")).data();
            mostrarCambios({ sIdentificador: vobjSucursal.sSucNombre, iCamRegistro: vobjSucursal.iSucId });
        });
        $(document).on("click", "#btnGuardar", function () {
            if (@Convert.ToString(vobjSucursalAccess.lCrear).ToLower() || @Convert.ToString(vobjSucursalAccess.lEditar).ToLower()) {
                if ($("#frmSucursal")[0].checkValidity()) {
                    fnPregunta("¿Esta seguro de guardar sucursal?", function () {
                        fnProcesando();
                        fnLlenarObjeto("#frmSucursal", objSucursal);
                        objSucursal.iSucEstado = @EstadoConstant.Activado;

                        if (objSucursal.iSucId == 0) {
                            fnPost('cmn/sucursal/crear', objSucursal)
                                .then((pobjApiRpta) => {
                                    if (fnVerificarApiRpta(pobjApiRpta)) {
                                        fnLimpiarDiv("#frmSucursal");
                                        $("#modSucursal").modal("hide");
                                        fnMensaje("Se creó sucursal exitosamente.", pobjApiRpta.sTipo);
                                        consultar();
                                    } else {
                                        fnProcesando(false);
                                    }
                                });
                        } else {
                            fnPut('cmn/sucursal/editar', objSucursal)
                                .then((pobjApiRpta) => {
                                    if (fnVerificarApiRpta(pobjApiRpta)) {
                                        fnLimpiarDiv("#frmSucursal");
                                        $("#modSucursal").modal("hide");
                                        fnMensaje("Se editó sucursal exitosamente.", pobjApiRpta.sTipo);
                                        consultar();
                                    } else {
                                        fnProcesando(false);
                                    }
                                });
                        }
                    });
                } else {
                    $("frmSucursal")[0].reportValidity();
                }
            } else {
                fnAdvertencia("Ud. no tiene permiso para crear o editar sucursal");
            }
        });
    </script>
}
